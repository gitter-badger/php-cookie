<?php
/**
 * Created by PhpStorm.
 * User: ec
 * Date: 23.06.15
 * Time: 9:42
 * Project: cookie
 * @author: Evgeny Pynykh bpteam22@gmail.com
 */

namespace bpteam\Cookie;

use \PHPUnit_Framework_TestCase;
use \ReflectionClass;

class CurlCookieTest extends PHPUnit_Framework_TestCase
{
    public static $name;

    public static function setUpBeforeClass()
    {
        self::$name = 'unit_test';
    }
    /**
     * @param        $name
     * @param string $className
     * @return \ReflectionMethod
     */
    protected static function getMethod($name, $className = 'bpteam\SimpleHttp\SimpleHttp')
    {
        $class = new ReflectionClass($className);
        $method = $class->getMethod($name);
        $method->setAccessible(true);
        return $method;
    }

    /**
     * @param        $name
     * @param string $className
     * @return \ReflectionProperty
     */
    protected static function getProperty($name, $className = 'bpteam\SimpleHttp\SimpleHttp')
    {
        $class = new ReflectionClass($className);
        $property = $class->getProperty($name);
        $property->setAccessible(true);
        return $property;
    }

    public function testOpen()
    {
        $cookie = new CurlCookie();
        $cookie->open(uniqid(self::$name));
        $this->assertFileExists($cookie->getFileName());
    }



    public function testAdd()
    {
        $cookie = new CurlCookie();
        $cookie->open(uniqid(self::$name));
        $cookie->add('testName', 'testValue', '.test1.ru', '/lib3', date('l, d-M-y H:i:s e', time() + 43200), false, false, true);
        $cookie->add('2testName', '2testValue', '.test1.ru', '/', date('l, d-M-y H:i:s e',63200), true, true, true);
        $cookies = $cookie->get('http://www.test1.ru/blablalba/22');
        $this->assertTrue(is_array($cookies));
        $this->assertArrayHasKey('testName', $cookies);
        $this->assertArrayHasKey('value', $cookies['testName']);
        $this->assertEquals('testValue', $cookies['testName']['value']);

        $this->assertArrayHasKey('2testName', $cookies);
        $this->assertArrayHasKey('value', $cookies['2testName']);
        $this->assertEquals('2testValue', $cookies['2testName']['value']);
    }

    public function testFrom()
    {
        $curlCookie='# Netscape HTTP Cookie File
# http://curl.haxx.se/rfc/cookie_spec.html
# This file was generated by libcurl! Edit at your own risk.

#HttpOnly_.test1.ru	TRUE	/	FALSE	0	PHPSESSID	57f1bcb516082cbdbc1929331e0e7312
.test1.ru	TRUE	/	FALSE	1416569958	BITRIX_SM_GUEST_ID	87997
.test1.ru	TRUE	/	FALSE	1416569958	BITRIX_SM_LAST_VISIT	26.11.2013+15%3A39%3A18
.test1.ru	TRUE	/	FALSE	1416569702	BITRIX_SM_SALE_UID	753959';
        $testCookie = CurlCookie::from($curlCookie);
        $this->assertTrue(is_array($testCookie));
        $this->assertArrayHasKey('BITRIX_SM_GUEST_ID', $testCookie);
        $this->assertArrayHasKey('value', $testCookie['BITRIX_SM_GUEST_ID']);
        $this->assertEquals('87997', $testCookie['BITRIX_SM_GUEST_ID']['value']);

        $this->assertArrayHasKey('PHPSESSID', $testCookie);
        $this->assertArrayHasKey('value', $testCookie['PHPSESSID']);
        $this->assertEquals('57f1bcb516082cbdbc1929331e0e7312', $testCookie['PHPSESSID']['value']);

        $this->assertArrayHasKey('httponly', $testCookie['PHPSESSID']);
        $this->assertEquals(true, $testCookie['PHPSESSID']['httponly']);
    }

    public function testTo()
    {
        $cookie = new CurlCookie();
        $cookie->open(uniqid(self::$name));
        $cookie->add('testName', 'testValue', '.test1.ru', '/lib3', date('l, d-M-y H:i:s e', time() + 43200), false, false, true);
        $cookie->add('2testName', '2testValue', '.test1.ru', '/', date('l, d-M-y H:i:s e',63200), true, true, true);
        $testCookie = $cookie->get('test1.ru');
        $testCurlLine = $cookie->to($testCookie['2testName']);
        $this->assertEquals("#HttpOnly_.test1.ru	TRUE	/	TRUE	63200	2testName	2testValue", $testCurlLine);
    }


    public function testFromFile()
    {
        $cookie1 = new CurlCookie();
        $cookie1->open(uniqid(self::$name));
        $curlCookie='# Netscape HTTP Cookie File
# http://curl.haxx.se/rfc/cookie_spec.html
# This file was generated by libcurl! Edit at your own risk.

#HttpOnly_.test1.ru	TRUE	/	FALSE	0	PHPSESSID	57f1bcb516082cbdbc1929331e0e7312
.test1.ru	TRUE	/	FALSE	1416569958	BITRIX_SM_GUEST_ID	87997
.test1.ru	TRUE	/	FALSE	1416569958	BITRIX_SM_LAST_VISIT	26.11.2013+15%3A39%3A18
.test1.ru	TRUE	/	FALSE	1416569702	BITRIX_SM_SALE_UID	753959';
        file_put_contents($cookie1->getFileFormName(), $curlCookie);
        $cookie2 = new CurlCookie();
        $cookie2->open(uniqid(self::$name));
        $cookie2->adds($cookie2->fromFile($cookie1->getFileFormName()));
        $testCookie = $cookie2->get('test1.ru');

        $this->assertTrue(is_array($testCookie));
        $this->assertArrayHasKey('BITRIX_SM_GUEST_ID', $testCookie);
        $this->assertArrayHasKey('value', $testCookie['BITRIX_SM_GUEST_ID']);
        $this->assertEquals('87997', $testCookie['BITRIX_SM_GUEST_ID']['value']);

        $this->assertArrayHasKey('PHPSESSID', $testCookie);
        $this->assertArrayHasKey('value', $testCookie['PHPSESSID']);
        $this->assertEquals('57f1bcb516082cbdbc1929331e0e7312', $testCookie['PHPSESSID']['value']);
        $this->assertEquals(true, $testCookie['PHPSESSID']['httponly']);
    }


    public function testToFile()
    {
        $cookie = new CurlCookie();
        $cookie->open(uniqid(self::$name));
        $cookie->add('PHPSESSID', '123456', '.test1.ru', '/', 0, true, false, true);
        $cookie->toFile($cookie->get('test1.ru'));

        $cookie2 = new CurlCookie();
        $cookie2->open(uniqid(self::$name));
        $cookie2->adds($cookie2->fromFile($cookie->getFileFormName()));
        $testCookie = $cookie2->get('test1.ru');
        $this->assertTrue(is_array($testCookie));
        $this->assertArrayHasKey('PHPSESSID', $testCookie);
        $this->assertArrayHasKey('value', $testCookie['PHPSESSID']);
        $this->assertEquals('123456', $testCookie['PHPSESSID']['value']);
    }
}